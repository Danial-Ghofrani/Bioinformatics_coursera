## Course 1, week 1, exercise 1
import numpy as np

def PatternCount(Text, Pattern):
    count = 0
    for i in range (len(Text) - len(Pattern) + 1):
        if Text[i: i + len(Pattern)] == Pattern:
            count = count + 1

    return count

def maxmap():
    pass


def frequency_table(text, k):
    freqMap = 0

def BetterFrequentWords(text, k):
    Frequent_patterns = np.zeros
    freqMap = Frequency_table()





genome = "CACCTACAGCGAAGTCGGACGAAGTCGCGGGAAGTCGTTGGAAGTCGGGAAGTCGAGAAGTCGAGGAAGTCGCGCCGAAGTCGAAATCTAAGAAGTCGGACAACAACCGGGGAATCGAAGTCGCGAAGTCGGGAAGTCGGAAGTCGGCGAAGTCGTCCGAAGTCGCGGAAGTCGCGGGGAAGTCGAAGAAGTCGGAAGAAGTCGCGAAGTCGGAAGTCGTCCGCGAAGTCGCTGAAGTCGGAAGTGAAGTCGTACTAGAAGTCGGGAAGTCGACGAAGTCGGAAGTCGGAAGTCGGAAGTCGGGAAGCAAGAAGTCGGAAGTCGGAAGTCGTCCCGAAGTCGACCGGATACAGAAGTCGCCTCCGAAGTCGCGAAGTCGGGAAGTCGTGAAGTCGTGCAGGAAGTCGGAAGTCGGAAGTCGGGTGAAGTCGTGAAGTCGACTGAAGTCGGAAGTCGTGGAAGTCGGAAGTCGGGGAAGTCGGTGAAGTCGGCGAAGTCGAGATGAAGTCGTCAGCGAAGTCGCGAAGTCGTACATTGGAAGTCGGAAGTCGGAAGTCGAGAAGTCGAGGAAGTCGAATAGAAGTCGAGAAGTCGGATGGATATCGGTGAAGTCGGGGAAGTCGTATATGGAAGTCGGAAGTCGGAAGTCGGCGATGTTCGAAGTCGAAGAAGTCGAGAAGTCGTAGAAGTCGAGGAAGTCGCGAAGTCGAGAAGTCGGAAGTCGAGAAGTCGGAAGTCGTTGGAAGTCGGAAGTCGGTGAAGTCGGAAGTCGGAAGTCGGAAGTCGGAAGTCGGGTGAAGTCGTAAGCCGTATACGAAGTCGGCGAAGTCGTGGAATAAGGAAGTCGGAAGTCGTGAAGTCGTAGAAGTCGCGATTACAGAAGTCGGTGGAAGTCGTGAAGTCGGAAGTCGGAAGTCGACGGAAGTCGGAAGTCGGCATGAAGTCGAAGAGAAGTCGCCGATTGCCGGAAGTCGCTTGAAGTCGTTTTGAAGTCGCATGAAGTCG"
pattern = "GAAGTCGGA"

print(PatternCount(genome, pattern))





